!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC = g++$/;"	m
CFLAGS	Makefile	/^CFLAGS= -DDEBUG -g -Wall -gdwarf-2 $/;"	m
ERROR	graph.h	13;"	d
Edge	graph.h	/^        Edge(int _src_idx, int _dst_idx, double _weight){$/;"	f	class:Edge
Edge	graph.h	/^class Edge{$/;"	c
Graph	graph.h	/^        Graph(){$/;"	f	class:Graph
Graph	graph.h	/^class Graph{$/;"	c
OBJS	Makefile	/^OBJS = $(SRCS:.cpp=.o)$/;"	m
SRCS	Makefile	/^SRCS = pagerank.cpp$/;"	m
TARGET	Makefile	/^TARGET = pagerank $/;"	m
Vertex	graph.h	/^        Vertex(int _idx){$/;"	f	class:Vertex
Vertex	graph.h	/^class Vertex{$/;"	c
__GRAPH_H__	graph.h	2;"	d
calPagerank	graph.h	/^bool Graph::calPagerank(double alpha, int max_it, double convergence){$/;"	f	class:Graph
calPagerank	graph.h	/^double Vertex::calPagerank(const double& alpha, const int& vertex_num, const double& convergence){$/;"	f	class:Vertex
converged	graph.h	/^        bool converged;$/;"	m	class:Graph
converged	graph.h	/^        bool converged;$/;"	m	class:Vertex
createGraphFromFile	graph.h	/^bool Graph::createGraphFromFile(const std::string& file_name){$/;"	f	class:Graph
dst_idx	graph.h	/^        int dst_idx;$/;"	m	class:Edge
dumpDot	graph.h	/^bool Graph::dumpDot(const std::string& file_name){$/;"	f	class:Graph
edges	graph.h	/^        std::vector<Edge*> edges; $/;"	m	class:Graph
getEdgeNum	graph.h	/^int Graph::getEdgeNum(){$/;"	f	class:Graph
getInDeg	graph.h	/^int Vertex::getInDeg(){$/;"	f	class:Vertex
getMaxVertexIdx	graph.h	/^int Graph::getMaxVertexIdx(const std::vector<std::vector<double> >& data){$/;"	f	class:Graph
getOutDeg	graph.h	/^int Vertex::getOutDeg(){$/;"	f	class:Vertex
getVertexNum	graph.h	/^int Graph::getVertexNum(){$/;"	f	class:Graph
idx	graph.h	/^        int idx;$/;"	m	class:Vertex
in_vertices	graph.h	/^        std::list<Vertex*> in_vertices;$/;"	m	class:Vertex
insertEmptyVertices	graph.h	/^bool Graph::insertEmptyVertices(const int& vertex_num){$/;"	f	class:Graph
isConverged	graph.h	/^bool Graph::isConverged(){$/;"	f	class:Graph
main	pagerank.cpp	/^int main(int argc, char** argv){$/;"	f
out_vertices	graph.h	/^        std::list<Vertex*> out_vertices;$/;"	m	class:Vertex
pr	graph.h	/^        double pr; \/\/ pagerank of the vertex$/;"	m	class:Vertex
printPR	graph.h	/^bool Graph::printPR(){$/;"	f	class:Graph
src_idx	graph.h	/^        int src_idx;$/;"	m	class:Edge
update	graph.h	/^bool Graph::update(const std::vector<double>& edge_info){$/;"	f	class:Graph
updatePR	graph.h	/^bool Graph::updatePR(const std::vector<double>& latest_pr){$/;"	f	class:Graph
vertex_num	graph.h	/^        int vertex_num;$/;"	m	class:Graph
vertices	graph.h	/^        std::vector<Vertex*> vertices;$/;"	m	class:Graph
weight	graph.h	/^        double weight;$/;"	m	class:Edge
